{"ast":null,"code":"const express = require('express');\nconst db = require('../db');\nconst bodyParser = require('body-parser');\nconst cors = require('cors');\nconst dotenv = require('dotenv');\ndotenv.config();\nconst app = express();\nconst port = process.env.PORT || 3000;\n\n// Configuración de CORS\nconst corsOptions = {\n  origin: '*',\n  // Permitir todas las solicitudes de origen. Puedes cambiar '*' por un dominio específico.\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n  allowedHeaders: ['Content-Type', 'Authorization']\n};\napp.use(cors(corsOptions));\napp.use(bodyParser.json());\napp.listen(port, () => {\n  console.log(`Server running on port ${port}`);\n});\n\n// Rutas\nconst establecimientoRoutes = require('../routes/establecimiento');\nconst aforoRoutes = require('../routes/aforo');\nconst categoriaRoutes = require('../routes/categoria');\nconst ventaRoutes = require('../routes/venta'); // Importar las rutas de venta\n\napp.use('/api/establecimiento', establecimientoRoutes);\napp.use('/api/aforo', aforoRoutes);\napp.use('/api/categoria', categoriaRoutes);\napp.use('/api/venta', ventaRoutes); // Usar las rutas de venta","map":{"version":3,"names":["express","require","db","bodyParser","cors","dotenv","config","app","port","process","env","PORT","corsOptions","origin","methods","allowedHeaders","use","json","listen","console","log","establecimientoRoutes","aforoRoutes","categoriaRoutes","ventaRoutes"],"sources":["C:/Users/ASUS Zenbook/OneDrive - Universidad de Las Américas/Documentos/ING WEB/proyecto_p3/react/src/index.js"],"sourcesContent":["const express = require('express');\r\nconst db = require('../db');\r\nconst bodyParser = require('body-parser');\r\nconst cors = require('cors');\r\nconst dotenv = require('dotenv');\r\n\r\ndotenv.config();\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\n// Configuración de CORS\r\nconst corsOptions = {\r\n  origin: '*', // Permitir todas las solicitudes de origen. Puedes cambiar '*' por un dominio específico.\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\r\n  allowedHeaders: ['Content-Type', 'Authorization']\r\n};\r\n\r\napp.use(cors(corsOptions));\r\napp.use(bodyParser.json());\r\n\r\napp.listen(port, () => {\r\n  console.log(`Server running on port ${port}`);\r\n});\r\n\r\n// Rutas\r\nconst establecimientoRoutes = require('../routes/establecimiento');\r\nconst aforoRoutes = require('../routes/aforo');\r\nconst categoriaRoutes = require('../routes/categoria');\r\nconst ventaRoutes = require('../routes/venta'); // Importar las rutas de venta\r\n\r\napp.use('/api/establecimiento', establecimientoRoutes);\r\napp.use('/api/aforo', aforoRoutes);\r\napp.use('/api/categoria', categoriaRoutes);\r\napp.use('/api/venta', ventaRoutes); // Usar las rutas de venta\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,EAAE,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC3B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAEhCI,MAAM,CAACC,MAAM,CAAC,CAAC;AAEf,MAAMC,GAAG,GAAGP,OAAO,CAAC,CAAC;AACrB,MAAMQ,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;;AAErC;AACA,MAAMC,WAAW,GAAG;EAClBC,MAAM,EAAE,GAAG;EAAE;EACbC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC;EACzCC,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe;AAClD,CAAC;AAEDR,GAAG,CAACS,GAAG,CAACZ,IAAI,CAACQ,WAAW,CAAC,CAAC;AAC1BL,GAAG,CAACS,GAAG,CAACb,UAAU,CAACc,IAAI,CAAC,CAAC,CAAC;AAE1BV,GAAG,CAACW,MAAM,CAACV,IAAI,EAAE,MAAM;EACrBW,OAAO,CAACC,GAAG,CAAC,0BAA0BZ,IAAI,EAAE,CAAC;AAC/C,CAAC,CAAC;;AAEF;AACA,MAAMa,qBAAqB,GAAGpB,OAAO,CAAC,2BAA2B,CAAC;AAClE,MAAMqB,WAAW,GAAGrB,OAAO,CAAC,iBAAiB,CAAC;AAC9C,MAAMsB,eAAe,GAAGtB,OAAO,CAAC,qBAAqB,CAAC;AACtD,MAAMuB,WAAW,GAAGvB,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;;AAEhDM,GAAG,CAACS,GAAG,CAAC,sBAAsB,EAAEK,qBAAqB,CAAC;AACtDd,GAAG,CAACS,GAAG,CAAC,YAAY,EAAEM,WAAW,CAAC;AAClCf,GAAG,CAACS,GAAG,CAAC,gBAAgB,EAAEO,eAAe,CAAC;AAC1ChB,GAAG,CAACS,GAAG,CAAC,YAAY,EAAEQ,WAAW,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}